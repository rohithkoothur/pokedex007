import Head from 'next/head'
import Image from 'next/image'
import logo from '../images/logo.png'
import Router from 'next/router'
import NavBar from '../Components/NavBar/NavBar'
import styles from '../styles/Home.module.css'
import Marquee from "react-fast-marquee";
import pokeball from '../images/pokeball.png';
import Link from 'next/link'
import {motion} from 'framer-motion';
import {useState} from 'react'


export default function Home({normaltype, electrictype, fightingtype}, statedata) {
    const [pokemon, putPokemon] = useState([]);
    const [darkMode, setDarkMode] = useState(false);

    const [query, setQuery] = useState('');
    return (
        <div className={darkMode ? "indexbody" : ""}>

            <Head>
                <title>Pokedex</title>
                <meta name="description" content="Generated by create next app"/>
                <link rel="icon" href="/favicon.ico"/>
                <link rel="stylesheet"
                      href="https://maxcdn.bootstrapcdn.com/bootstrap/4.5.2/css/bootstrap.min.css"></link>
            </Head>


            {/* NavBar Section */}
            <motion.div animate={{y: -10}} initial={{y: -250}}>

                <nav className="navbar navbar-dark bg-dark">
                    <Link href="/"><a className="navbar-brand"><Image src={logo} alt="logo"/> </a></Link>
                    <form className="form-inline">
                        <input className="form-control mr-sm-2" value={query} onChange={(e) => {
                            setQuery(e.currentTarget.value)
                        }} type="search" placeholder="Search Pokemon Here" aria-label="Search"/>
                        <button className="btn btn-outline-success my-2 my-sm-0" type="submit" onClick={(e) => {
                            e.preventDefault();
                            console.log("searched for " + query)
                            fetch(`https://pokeapi.co/api/v2/pokemon/${query}`)
                                .then((resp, Response) => resp.json())
                                .then(data => {

                                    putPokemon(data);
                                    console.log(data);
                                    Router.push(`/pokemons/${query}`)
                               });

                        }
                        }>Search
                        </button>
                        <div className="darkornot">
                            {darkMode ? <span>Light</span> : <span>Dark</span>}
                            <label className="switch">
                                <input type="checkbox" onChange={() => setDarkMode(!darkMode)}/>
                                <span className="slider round"></span>
                            </label></div>
                    </form>
                </nav>
            </motion.div>
            {/* Home Page Section */}
            <nav aria-label="breadcrumb">
                {/* <ol  className="breadcrumb">
    <div className="welcome">
 <h5 > <Marquee>!!...Welcome to Pokedex... A World of Pokemons...!!</Marquee></h5>
  </div>
  </ol>*/}
            </nav>
            <motion.div className={darkMode ? "darktypeheading" : "typeheading"} initial={{opacity: 0}}
                        animate={{opacity: 1}}
                        transition={{delay: 0.4}}>
                <h2><Image className="pokeimage"  src={pokeball} alt="logo"/><span
                    className="typehead">Normal Pokemons</span></h2>
            </motion.div>

            <motion.div className='row'
                        initial={{opacity: 0}}
                        animate={{opacity: 1}}
                        transition={{delay: .8}}
            >
               <div className='testposters'>
                    {
                        normaltype.pokemon.map((name, index) => {
                            return (

                                <motion.div className={darkMode ? "darktestcardtest" : "testcardtest"} key={name}
                                            whileHover={{scale: 1.1}}>
                                    <Link href={`/pokemons/${name.pokemon.name}`}><a>
                                        <div className="titt">
                                            {
                                            }
                                            <img className="testposters"
                                                 src={`https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/pokemon/${name.pokemon.url.slice(34, -1)}.png`}/>
                                            <div className="testpokemonname">{name.pokemon.name.toUpperCase()}</div>
                                        </div>
                                    </a></Link>
                                </motion.div>
                            )
                        })
                    }
                </div>
                )
            </motion.div>
            <motion.div className={darkMode ? "darktypeheading" : "typeheading"} initial={{opacity: 0}}
                        animate={{opacity: 1}}
                        transition={{delay: 1.2}}>
                <h2><Image className="pokeimage" src={pokeball} alt="logo"/><span style={{padding: "5px"}}>Electric Pokemons</span>
                </h2>
            </motion.div>
            <motion.div className='row' initial={{opacity: 0}}
                        animate={{opacity: 1}}
                        transition={{delay: 1.6}}>
                <div className='testposters'>
                    {
                        electrictype.pokemon.map((name, index) => {
                            return (
                                <motion.div className={darkMode ? "darktestcardtest" : "testcardtest"} key={name}
                                            whileHover={{scale: 1.1}}>
                                    <Link href={`/pokemons/${name.pokemon.name}`}><a>
                                        <div className="titt">
                                            <img className="testposters"
                                                 src={`https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/pokemon/${name.pokemon.url.slice(34, -1)}.png`}/>
                                            <div className="testpokemonname">{name.pokemon.name.toUpperCase()}</div>
                                        </div>
                                    </a></Link>
                             </motion.div>
                            )
                        })
                    }
                </div>
                )
            </motion.div>
            <motion.div className={darkMode ? "darktypeheading" : "typeheading"} initial={{opacity: 0}}
                        animate={{opacity: 1}}
                        transition={{delay: 2}}>
                <h2><Image className="pokeimage" src={pokeball} alt="logo"/>Fighting Pokemons</h2>
            </motion.div>
            <motion.div className='row' initial={{opacity: 0}}
                        animate={{opacity: 1}}
                        transition={{delay: 2.4}}>
                <div className='testposters'>
                    {
                        fightingtype.pokemon.map((name, index) => {
                            return (
                                <motion.div className={darkMode ? "darktestcardtest" : "testcardtest"} key={name}
                                            whileHover={{scale: 1.1, originX: 0}}>
                                    <Link href={`/pokemons/${name.pokemon.name}`}><a>
                                        <div className="titt">
                                            {
                                            }
                                            <img className="testposters"
                                                 src={`https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/pokemon/${name.pokemon.url.slice(34, -1)}.png`}/>
                                            <div className="testpokemonname">{name.pokemon.name.toUpperCase()}</div>
                                        </div>
                                    </a></Link>
                                </motion.div>
                            )
                        })
                    }
                </div>
                )
            </motion.div>
        </div>
    )
}


export const getServerSideProps = async () => {
    const resnormal = await fetch(`https://pokeapi.co/api/v2/type/normal`)
    const datanormal = await resnormal.json()
    const reselectric = await fetch(`https://pokeapi.co/api/v2/type/electric`)
    const dataelectric = await reselectric.json()
    const reselfighting = await fetch(`https://pokeapi.co/api/v2/type/fighting`)
    const datafighting = await reselfighting.json()
    return {
        props: {
            normaltype: datanormal,
            electrictype: dataelectric,
            fightingtype: datafighting
        }
    }
}